name: '🔒 CodeQL Security Analysis'
# Copyright PageCloudv1
# SPDX-License-Identifier: Apache-2.0

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
  schedule:
    # Executa toda segunda-feira às 00:00 UTC
    - cron: '0 0 * * 1'
  workflow_dispatch:

# Permissões mínimas (princípio do menor privilégio)
permissions:
  contents: 'read'

jobs:
  analyze:
    name: '🔍 Analyze (${{ matrix.language }})'
    runs-on: 'ubuntu-latest'
    timeout-minutes: 30
    
    permissions:
      actions: 'read'
      contents: 'read'
      security-events: 'write'
    
    strategy:
      fail-fast: false
      matrix:
        language:
          - 'javascript-typescript'
        # CodeQL suporta: javascript-typescript, python, go, ruby, java, cpp, csharp
        # Adicione mais linguagens conforme necessário
    
    steps:
      # Step 1: Gerar token do GitHub App (xcloudapp-bot)
      - name: '🔑 Generate GitHub App Token'
        id: 'generate_token'
        uses: 'actions/create-github-app-token@v1'
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_PRIVATE_KEY }}
          owner: 'PageCloudv1'
          repositories: 'xcloud-bot'
      
      # Step 2: Hardening de segurança do runner
      - name: '🛡️ Harden Runner'
        uses: 'step-security/harden-runner@0080882f6c36860b6ba35c610c98ce87d4e2f26f' # v2.10.2
        with:
          egress-policy: 'audit'
          disable-telemetry: true
          # Permitir apenas tráfego necessário
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            objects.githubusercontent.com:443
            registry.npmjs.org:443
            uploads.github.com:443
      
      # Step 3: Checkout do código
      - name: '📥 Checkout Repository'
        uses: 'actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683' # v4.2.2
        with:
          token: ${{ steps.generate_token.outputs.token }}
      
      # Step 4: Configurar Node.js (necessário para JavaScript/TypeScript)
      - name: '⚙️ Setup Node.js'
        if: matrix.language == 'javascript-typescript'
        uses: 'actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af' # v4.1.0
        with:
          node-version: '20'
          cache: 'npm'
      
      # Step 5: Instalar dependências (para melhor análise)
      - name: '📦 Install Dependencies'
        if: matrix.language == 'javascript-typescript'
        run: |
          npm ci --ignore-scripts
          # --ignore-scripts previne execução de scripts maliciosos
      
      # Step 6: Inicializar CodeQL
      - name: '🔧 Initialize CodeQL'
        uses: 'github/codeql-action/init@76621b61decf072c1cee8dd1ce2d2a82d33c17ed' # v3.29.5
        with:
          languages: '${{ matrix.language }}'
          # Queries customizadas (opcional)
          # queries: +security-extended,security-and-quality
          config: |
            paths-ignore:
              - node_modules
              - dist
              - build
              - coverage
              - '**/*.test.js'
              - '**/*.spec.js'
      
      # Step 7: Autobuild (para linguagens compiladas)
      - name: '🏗️ Autobuild'
        uses: 'github/codeql-action/autobuild@76621b61decf072c1cee8dd1ce2d2a82d33c17ed' # v3.29.5
      
      # Step 8: Executar análise CodeQL
      - name: '🔍 Perform CodeQL Analysis'
        uses: 'github/codeql-action/analyze@76621b61decf072c1cee8dd1ce2d2a82d33c17ed' # v3.29.5
        with:
          category: '/language:${{ matrix.language }}'
          # Upload results para GitHub Security tab
          upload: 'always'
      
      # Step 9: Gerar relatório de segurança (opcional)
      - name: '📊 Generate Security Report'
        if: always()
        run: |
          echo "## 🔒 CodeQL Security Analysis Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Language:** ${{ matrix.language }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Analysis completed successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📋 View detailed results in the [Security tab](https://github.com/${{ github.repository }}/security/code-scanning)" >> $GITHUB_STEP_SUMMARY
